

import vscode from 'vscode'
import Path from 'path'
import fs from 'fs'
import templater from 'simple-file-templater'
import { Q } from './usePrompt'

import { convertAccentedCharacters, forI } from 'topkat-utils'

const window = vscode.window

const alphabet = ' .ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'

const font = {
    ainsiShadow: [
        [`    `, `   `, ` █████╗ `, `██████╗ `, ` ██████╗`, `██████╗ `, `███████╗`, `███████╗`, ` ██████╗ `, `██╗  ██╗`, `██╗`, `     ██╗`, `██╗  ██╗`, `██╗     `, `███╗   ███╗`, `███╗   ██╗`, ` ██████╗ `, `██████╗ `, ` ██████╗ `, `██████╗ `, `███████╗`, `████████╗`, `██╗   ██╗`, `██╗   ██╗`, `██╗    ██╗`, `██╗  ██╗`, `██╗   ██╗`, `███████╗`, ` ██╗`, `██████╗ `, `██████╗ `, `██╗  ██╗`, `███████╗`, ` ██████╗ `, `███████╗`, ` █████╗ `, ` █████╗ `, ` ██████╗ `,],
        [`    `, `   `, `██╔══██╗`, `██╔══██╗`, `██╔════╝`, `██╔══██╗`, `██╔════╝`, `██╔════╝`, `██╔════╝ `, `██║  ██║`, `██║`, `     ██║`, `██║ ██╔╝`, `██║     `, `████╗ ████║`, `████╗  ██║`, `██╔═══██╗`, `██╔══██╗`, `██╔═══██╗`, `██╔══██╗`, `██╔════╝`, `╚══██╔══╝`, `██║   ██║`, `██║   ██║`, `██║    ██║`, `╚██╗██╔╝`, `╚██╗ ██╔╝`, `╚══███╔╝`, `███║`, `╚════██╗`, `╚════██╗`, `██║  ██║`, `██╔════╝`, `██╔════╝ `, `╚════██║`, `██╔══██╗`, `██╔══██╗`, `██╔═████╗`,],
        [`    `, `   `, `███████║`, `██████╔╝`, `██║     `, `██║  ██║`, `█████╗  `, `█████╗  `, `██║  ███╗`, `███████║`, `██║`, `     ██║`, `█████╔╝ `, `██║     `, `██╔████╔██║`, `██╔██╗ ██║`, `██║   ██║`, `██████╔╝`, `██║   ██║`, `██████╔╝`, `███████╗`, `   ██║   `, `██║   ██║`, `██║   ██║`, `██║ █╗ ██║`, ` ╚███╔╝ `, ` ╚████╔╝ `, `  ███╔╝ `, `╚██║`, ` █████╔╝`, ` █████╔╝`, `███████║`, `███████╗`, `███████╗ `, `    ██╔╝`, `╚█████╔╝`, `╚██████║`, `██║██╔██║`,],
        [`    `, `   `, `██╔══██║`, `██╔══██╗`, `██║     `, `██║  ██║`, `██╔══╝  `, `██╔══╝  `, `██║   ██║`, `██╔══██║`, `██║`, `██   ██║`, `██╔═██╗ `, `██║     `, `██║╚██╔╝██║`, `██║╚██╗██║`, `██║   ██║`, `██╔═══╝ `, `██║▄▄ ██║`, `██╔══██╗`, `╚════██║`, `   ██║   `, `██║   ██║`, `╚██╗ ██╔╝`, `██║███╗██║`, ` ██╔██╗ `, `  ╚██╔╝  `, ` ███╔╝  `, ` ██║`, `██╔═══╝ `, ` ╚═══██╗`, `╚════██║`, `╚════██║`, `██╔═══██╗`, `   ██╔╝ `, `██╔══██╗`, ` ╚═══██║`, `████╔╝██║`,],
        [`    `, `██╗`, `██║  ██║`, `██████╔╝`, `╚██████╗`, `██████╔╝`, `███████╗`, `██║     `, `╚██████╔╝`, `██║  ██║`, `██║`, `╚█████╔╝`, `██║  ██╗`, `███████╗`, `██║ ╚═╝ ██║`, `██║ ╚████║`, `╚██████╔╝`, `██║     `, `╚██████╔╝`, `██║  ██║`, `███████║`, `   ██║   `, `╚██████╔╝`, ` ╚████╔╝ `, `╚███╔███╔╝`, `██╔╝ ██╗`, `   ██║   `, `███████╗`, ` ██║`, `███████╗`, `██████╔╝`, `     ██║`, `███████║`, `╚██████╔╝`, `   ██║  `, `╚█████╔╝`, ` █████╔╝`, `╚██████╔╝`,],
        [`    `, `╚═╝`, `╚═╝  ╚═╝`, `╚═════╝ `, ` ╚═════╝`, `╚═════╝ `, `╚══════╝`, `╚═╝     `, ` ╚═════╝ `, `╚═╝  ╚═╝`, `╚═╝`, ` ╚════╝ `, `╚═╝  ╚═╝`, `╚══════╝`, `╚═╝     ╚═╝`, `╚═╝  ╚═══╝`, ` ╚═════╝ `, `╚═╝     `, ` ╚══▀▀═╝ `, `╚═╝  ╚═╝`, `╚══════╝`, `   ╚═╝   `, ` ╚═════╝ `, `  ╚═══╝  `, ` ╚══╝╚══╝ `, `╚═╝  ╚═╝`, `   ╚═╝   `, `╚══════╝`, ` ╚═╝`, `╚══════╝`, `╚═════╝ `, `     ╚═╝`, `╚══════╝`, ` ╚═════╝ `, `   ╚═╝  `, ` ╚════╝ `, ` ╚════╝ `, ` ╚═════╝ `,],
    ]
}


export default () => {

    vscode.commands.registerTextEditorCommand('coreVscodeModule.h1', async editor => {

        const text = await Q({ prompt: `Comment text:` })

        const textParsed = convertAccentedCharacters(text
            .replace(/[,?!]/g, '.')
            .toUpperCase())

        const letters = textParsed.split('')

        const selectedFont = font.ainsiShadow
        const nbLines = selectedFont.length

        editor.selections.forEach((selection, i) => {
            if (i > 0) return
            const nbSpaces = selection.active.character
            const lines = [] as string[]
            forI(nbLines, lineNb => {
                lines[lineNb] = (lineNb !== 0 ? ` `.repeat(nbSpaces) : '') + '//  ' + letters.map(l => {
                    const letterIndex = alphabet.indexOf(l)
                    if (letterIndex > -1) return selectedFont[lineNb][letterIndex]
                    else return ''
                }).join('')
            })

            editor.edit((editBuilder) => {
                editBuilder.insert(selection.active, lines.join('\n'))
            })
        })
    })
}