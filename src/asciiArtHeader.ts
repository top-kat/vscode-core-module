

import vscode from 'vscode'
import { Q } from './usePrompt'

import { convertAccentedCharacters, forI } from 'topkat-utils'


const alphabet = ' .ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'

const font = {
    ainsiShadow: {
        letterSpacing: 0,
        chars: [
            [`    `, `   `, ` █████╗ `, `██████╗ `, ` ██████╗`, `██████╗ `, `███████╗`, `███████╗`, ` ██████╗ `, `██╗  ██╗`, `██╗`, `     ██╗`, `██╗  ██╗`, `██╗     `, `███╗   ███╗`, `███╗   ██╗`, ` ██████╗ `, `██████╗ `, ` ██████╗ `, `██████╗ `, `███████╗`, `████████╗`, `██╗   ██╗`, `██╗   ██╗`, `██╗    ██╗`, `██╗  ██╗`, `██╗   ██╗`, `███████╗`, ` ██╗`, `██████╗ `, `██████╗ `, `██╗  ██╗`, `███████╗`, ` ██████╗ `, `███████╗`, ` █████╗ `, ` █████╗ `, ` ██████╗ `,],
            [`    `, `   `, `██╔══██╗`, `██╔══██╗`, `██╔════╝`, `██╔══██╗`, `██╔════╝`, `██╔════╝`, `██╔════╝ `, `██║  ██║`, `██║`, `     ██║`, `██║ ██╔╝`, `██║     `, `████╗ ████║`, `████╗  ██║`, `██╔═══██╗`, `██╔══██╗`, `██╔═══██╗`, `██╔══██╗`, `██╔════╝`, `╚══██╔══╝`, `██║   ██║`, `██║   ██║`, `██║    ██║`, `╚██╗██╔╝`, `╚██╗ ██╔╝`, `╚══███╔╝`, `███║`, `╚════██╗`, `╚════██╗`, `██║  ██║`, `██╔════╝`, `██╔════╝ `, `╚════██║`, `██╔══██╗`, `██╔══██╗`, `██╔═████╗`,],
            [`    `, `   `, `███████║`, `██████╔╝`, `██║     `, `██║  ██║`, `█████╗  `, `█████╗  `, `██║  ███╗`, `███████║`, `██║`, `     ██║`, `█████╔╝ `, `██║     `, `██╔████╔██║`, `██╔██╗ ██║`, `██║   ██║`, `██████╔╝`, `██║   ██║`, `██████╔╝`, `███████╗`, `   ██║   `, `██║   ██║`, `██║   ██║`, `██║ █╗ ██║`, ` ╚███╔╝ `, ` ╚████╔╝ `, `  ███╔╝ `, `╚██║`, ` █████╔╝`, ` █████╔╝`, `███████║`, `███████╗`, `███████╗ `, `    ██╔╝`, `╚█████╔╝`, `╚██████║`, `██║██╔██║`,],
            [`    `, `   `, `██╔══██║`, `██╔══██╗`, `██║     `, `██║  ██║`, `██╔══╝  `, `██╔══╝  `, `██║   ██║`, `██╔══██║`, `██║`, `██   ██║`, `██╔═██╗ `, `██║     `, `██║╚██╔╝██║`, `██║╚██╗██║`, `██║   ██║`, `██╔═══╝ `, `██║▄▄ ██║`, `██╔══██╗`, `╚════██║`, `   ██║   `, `██║   ██║`, `╚██╗ ██╔╝`, `██║███╗██║`, ` ██╔██╗ `, `  ╚██╔╝  `, ` ███╔╝  `, ` ██║`, `██╔═══╝ `, ` ╚═══██╗`, `╚════██║`, `╚════██║`, `██╔═══██╗`, `   ██╔╝ `, `██╔══██╗`, ` ╚═══██║`, `████╔╝██║`,],
            [`    `, `██╗`, `██║  ██║`, `██████╔╝`, `╚██████╗`, `██████╔╝`, `███████╗`, `██║     `, `╚██████╔╝`, `██║  ██║`, `██║`, `╚█████╔╝`, `██║  ██╗`, `███████╗`, `██║ ╚═╝ ██║`, `██║ ╚████║`, `╚██████╔╝`, `██║     `, `╚██████╔╝`, `██║  ██║`, `███████║`, `   ██║   `, `╚██████╔╝`, ` ╚████╔╝ `, `╚███╔███╔╝`, `██╔╝ ██╗`, `   ██║   `, `███████╗`, ` ██║`, `███████╗`, `██████╔╝`, `     ██║`, `███████║`, `╚██████╔╝`, `   ██║  `, `╚█████╔╝`, ` █████╔╝`, `╚██████╔╝`,],
            [`    `, `╚═╝`, `╚═╝  ╚═╝`, `╚═════╝ `, ` ╚═════╝`, `╚═════╝ `, `╚══════╝`, `╚═╝     `, ` ╚═════╝ `, `╚═╝  ╚═╝`, `╚═╝`, ` ╚════╝ `, `╚═╝  ╚═╝`, `╚══════╝`, `╚═╝     ╚═╝`, `╚═╝  ╚═══╝`, ` ╚═════╝ `, `╚═╝     `, ` ╚══▀▀═╝ `, `╚═╝  ╚═╝`, `╚══════╝`, `   ╚═╝   `, ` ╚═════╝ `, `  ╚═══╝  `, ` ╚══╝╚══╝ `, `╚═╝  ╚═╝`, `   ╚═╝   `, `╚══════╝`, ` ╚═╝`, `╚══════╝`, `╚═════╝ `, `     ╚═╝`, `╚══════╝`, ` ╚═════╝ `, `   ╚═╝  `, ` ╚════╝ `, ` ╚════╝ `, ` ╚═════╝ `,],
        ]
    },
    customSmall: {
        letterSpacing: 1,
        chars: [
            [` `, ` `, `▄▀▀▀▄`, `█▀▀▀▄`, `▄▀▀▀▄`, `█▀▀▀▄`, `█▀▀▀`, `█▀▀▀`, `▄▀▀▀▄`, `█   █`, `█`, `    █`, `█  █`, `█  `, `█▀▄ ▄▀█`, `██  █`, `█▀▀▀█`, `█▀▀█`, `█▀▀▀█`, `█▀▀▀▄`, `█▀▀▀`, `▀▀█▀▀`, `█  █`, `█  █`, `█     █`, `█  █`, `█  █`, `▀▀▀█`, `▄█`, `▀▀▀█`, `▀▀▀█`, `█   `, `█▀▀▀`, `█▀▀▀`, `▀▀▀█`, `█▀▀█`, `█▀▀█`, `█▀▀█`],
            [` `, ` `, `█▀▀▀█`, `█▀▀▀▄`, `█   ▄`, `█   █`, `█▀▀▀`, `█▀▀▀`, `█  ▄▄`, `█▀▀▀█`, `█`, `▄   █`, `█▀▀▄`, `█  `, `█  ▀  █`, `█ █ █`, `█   █`, `█▀▀▀`, `█▄  █`, `█▀▀█ `, `▀▀▀█`, `  █  `, `█  █`, `█  █`, `█ ▄▀▄ █`, `▄▀▀▄`, ` ▀█ `, ` ▄▀ `, ` █`, `█▀▀▀`, `▀▀▀█`, `█  █`, `▀▀▀█`, `█▀▀█`, ` ▄▀ `, `█▀▀█`, `▀▀▀█`, `█  █`],
            [` `, `▀`, `▀   ▀`, `▀▀▀▀ `, ` ▀▀▀ `, `▀▀▀▀ `, `▀▀▀▀`, `▀   `, ` ▀▀▀ `, `▀   ▀`, `▀`, ` ▀▀▀ `, `▀  ▀`, `▀▀▀`, `▀     ▀`, `▀  ▀▀`, `▀▀▀▀▀`, `▀   `, `▀▀▀▀█`, `▀   ▀`, `▀▀▀▀`, `  ▀  `, `▀▀▀▀`, ` ▀▀ `, `▀▀   ▀▀`, `▀  ▀`, ` ▀  `, `▀▀▀▀`, ` ▀`, `▀▀▀▀`, `▀▀▀▀`, `▀▀▀█`, `▀▀▀▀`, `▀▀▀▀`, `▀   `, `▀▀▀▀`, `▀▀▀▀`, `▀▀▀▀`],
        ]
    },
}

// █◾◼▮▇◼█▀▔▃▄▅▆▂▁   ▀▄█
// █◾◼▮▇◼█▀▔▃▄▅▆▂▁   ▀▄█

export default () => {
    vscode.commands.registerTextEditorCommand('coreVscodeModule.h1', async editor => header(editor, 'h1'))
    vscode.commands.registerTextEditorCommand('coreVscodeModule.h2', async editor => header(editor, 'h2'))
}


async function header(editor: vscode.TextEditor, hsize: 'h1' | 'h2') {

    const text = await Q({ prompt: `TEXT:` })

    const textParsed = convertAccentedCharacters(text
        .replace(/[,?!]/g, '.')
        .toUpperCase())

    const letters = textParsed.split('')

    const selectedFont = hsize === 'h1' ? font.ainsiShadow : font.customSmall
    const nbLines = selectedFont.chars.length

    editor.selections.forEach((selection, i) => {
        if (i > 0) return
        const nbSpaces = selection.active.character
        const lines = [] as string[]
        forI(nbLines, lineNb => {
            lines[lineNb] = (lineNb !== 0 ? ` `.repeat(nbSpaces) : '') + '//  ' + letters.map(l => {
                const letterIndex = alphabet.indexOf(l)
                if (letterIndex > -1) return selectedFont.chars[lineNb][letterIndex]
                else return ''
            }).join(' '.repeat(selectedFont.letterSpacing))
        })

        editor.edit((editBuilder) => {
            editBuilder.insert(selection.active, lines.join('\n'))
        })
    })
}